(()=>{"use strict";const e=new class{constructor(){this.counter=Number(),this.container=Object(),this.worker=new Worker(URL.createObjectURL(new Blob(["self.onmessage = function(event) {\n  const { type, counter, timeout, id } = event.data\n  if (type === 'setTimeout' || type === 'setInterval') {\n    const id = type === 'setTimeout'\n      ? setTimeout (() => self.postMessage({ type: 'setTimeout',  counter }), timeout)\n      : setInterval(() => self.postMessage({ type: 'setInterval', counter }), timeout)\n    self.postMessage({ type: 'set', counter, id })\n  } else if (type === 'clearTimeout' || type === 'clearInterval') {\n    if (type === 'clearTimeout') clearTimeout(id)\n    else if (type === 'clearInterval') clearInterval(id)\n    self.postMessage({ type: 'clear', counter })\n  }\n}\n"]))),this.worker.onmessage=this.onmessage.bind(this)}onmessage(e){const{type:t,counter:n,id:r}=e.data;"set"===t?this.container[n].id=r:"clear"===t?delete this.container[n]:"setTimeout"!==t&&"setInterval"!==t||!this.container[n]||((0,this.container[n].callback)(...this.container[n].args),"setTimeout"===t&&delete this.container[n])}setTimeout(e,t,...n){return this.setTimeWorker("setTimeout",e,t,...n)}clearTimeout(e){this.clearTimeWorker("clearTimeout",e)}setInterval(e,t,...n){return this.setTimeWorker("setInterval",e,t,...n)}clearInterval(e){this.clearTimeWorker("clearInterval",e)}setTimeWorker(e,t,n,...r){const i=++this.counter;return this.container[i]=Object(),this.container[i].callback=t,this.container[i].args=r,this.worker.postMessage({type:e,counter:i,timeout:n}),i}clearTimeWorker(e,t){if(this.container[t]){const n=this.container[t].id;this.worker.postMessage({type:e,counter:t,id:n})}}};["setTimeout","setInterval","clearTimeout","clearInterval"].forEach((t=>unsafeWindow[t]=e[t].bind(e)));const t=function(e){const t=document.createElement("div");return t.setAttribute("id",e),t};document.addEventListener("DOMContentLoaded",(function(){const e=t("valkyrie");e.innerHTML='<div>{{ name }}</div>\n\n<teleport to="#sidebar">\n  <div>{{ server }}</div>\n</teleport>\n',document.body.append(e);const n=t("sidebar");document.body.append(n);const r=app.mount("#valkyrie");unsafeWindow.Valkyrie=r}),!1),document.addEventListener("DOMContentLoaded",(function(){const e=GM_info.script.icon,t=document.createElement("link");t.setAttribute("type","image/x-icon"),t.setAttribute("rel","shortcut icon"),t.setAttribute("href",e),document.head.appendChild(t)}),!1),GM_registerMenuCommand("GreasyFork Index",(function(){window.open("https://greasyfork.org/scripts/422519")})),GM_registerMenuCommand("Github Repo",(function(){window.open("https://github.com/coderzhaoziwei/legend-of-valkyrie")}))})();